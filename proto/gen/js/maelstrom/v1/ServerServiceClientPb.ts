/**
 * @fileoverview gRPC-Web generated client stub for maelstrom.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: maelstrom/v1/server.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as maelstrom_v1_server_pb from '../../maelstrom/v1/server_pb'; // proto import: "maelstrom/v1/server.proto"


export class MaelstromClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorInfo = new grpcWeb.MethodDescriptor(
    '/maelstrom.v1.Maelstrom/Info',
    grpcWeb.MethodType.UNARY,
    maelstrom_v1_server_pb.InfoRequest,
    maelstrom_v1_server_pb.InfoResponse,
    (request: maelstrom_v1_server_pb.InfoRequest) => {
      return request.serializeBinary();
    },
    maelstrom_v1_server_pb.InfoResponse.deserializeBinary
  );

  info(
    request: maelstrom_v1_server_pb.InfoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<maelstrom_v1_server_pb.InfoResponse>;

  info(
    request: maelstrom_v1_server_pb.InfoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.InfoResponse) => void): grpcWeb.ClientReadableStream<maelstrom_v1_server_pb.InfoResponse>;

  info(
    request: maelstrom_v1_server_pb.InfoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.InfoResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/maelstrom.v1.Maelstrom/Info',
        request,
        metadata || {},
        this.methodDescriptorInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/maelstrom.v1.Maelstrom/Info',
    request,
    metadata || {},
    this.methodDescriptorInfo);
  }

  methodDescriptorSubmit = new grpcWeb.MethodDescriptor(
    '/maelstrom.v1.Maelstrom/Submit',
    grpcWeb.MethodType.UNARY,
    maelstrom_v1_server_pb.SubmitRequest,
    maelstrom_v1_server_pb.SubmitResponse,
    (request: maelstrom_v1_server_pb.SubmitRequest) => {
      return request.serializeBinary();
    },
    maelstrom_v1_server_pb.SubmitResponse.deserializeBinary
  );

  submit(
    request: maelstrom_v1_server_pb.SubmitRequest,
    metadata?: grpcWeb.Metadata | null): Promise<maelstrom_v1_server_pb.SubmitResponse>;

  submit(
    request: maelstrom_v1_server_pb.SubmitRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.SubmitResponse) => void): grpcWeb.ClientReadableStream<maelstrom_v1_server_pb.SubmitResponse>;

  submit(
    request: maelstrom_v1_server_pb.SubmitRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.SubmitResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/maelstrom.v1.Maelstrom/Submit',
        request,
        metadata || {},
        this.methodDescriptorSubmit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/maelstrom.v1.Maelstrom/Submit',
    request,
    metadata || {},
    this.methodDescriptorSubmit);
  }

  methodDescriptorStatus = new grpcWeb.MethodDescriptor(
    '/maelstrom.v1.Maelstrom/Status',
    grpcWeb.MethodType.UNARY,
    maelstrom_v1_server_pb.StatusRequest,
    maelstrom_v1_server_pb.StatusResponse,
    (request: maelstrom_v1_server_pb.StatusRequest) => {
      return request.serializeBinary();
    },
    maelstrom_v1_server_pb.StatusResponse.deserializeBinary
  );

  status(
    request: maelstrom_v1_server_pb.StatusRequest,
    metadata?: grpcWeb.Metadata | null): Promise<maelstrom_v1_server_pb.StatusResponse>;

  status(
    request: maelstrom_v1_server_pb.StatusRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.StatusResponse) => void): grpcWeb.ClientReadableStream<maelstrom_v1_server_pb.StatusResponse>;

  status(
    request: maelstrom_v1_server_pb.StatusRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.StatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/maelstrom.v1.Maelstrom/Status',
        request,
        metadata || {},
        this.methodDescriptorStatus,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/maelstrom.v1.Maelstrom/Status',
    request,
    metadata || {},
    this.methodDescriptorStatus);
  }

  methodDescriptorBalance = new grpcWeb.MethodDescriptor(
    '/maelstrom.v1.Maelstrom/Balance',
    grpcWeb.MethodType.UNARY,
    maelstrom_v1_server_pb.BalanceRequest,
    maelstrom_v1_server_pb.BalanceResponse,
    (request: maelstrom_v1_server_pb.BalanceRequest) => {
      return request.serializeBinary();
    },
    maelstrom_v1_server_pb.BalanceResponse.deserializeBinary
  );

  balance(
    request: maelstrom_v1_server_pb.BalanceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<maelstrom_v1_server_pb.BalanceResponse>;

  balance(
    request: maelstrom_v1_server_pb.BalanceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.BalanceResponse) => void): grpcWeb.ClientReadableStream<maelstrom_v1_server_pb.BalanceResponse>;

  balance(
    request: maelstrom_v1_server_pb.BalanceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.BalanceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/maelstrom.v1.Maelstrom/Balance',
        request,
        metadata || {},
        this.methodDescriptorBalance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/maelstrom.v1.Maelstrom/Balance',
    request,
    metadata || {},
    this.methodDescriptorBalance);
  }

  methodDescriptorCancel = new grpcWeb.MethodDescriptor(
    '/maelstrom.v1.Maelstrom/Cancel',
    grpcWeb.MethodType.UNARY,
    maelstrom_v1_server_pb.CancelRequest,
    maelstrom_v1_server_pb.CancelResponse,
    (request: maelstrom_v1_server_pb.CancelRequest) => {
      return request.serializeBinary();
    },
    maelstrom_v1_server_pb.CancelResponse.deserializeBinary
  );

  cancel(
    request: maelstrom_v1_server_pb.CancelRequest,
    metadata?: grpcWeb.Metadata | null): Promise<maelstrom_v1_server_pb.CancelResponse>;

  cancel(
    request: maelstrom_v1_server_pb.CancelRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.CancelResponse) => void): grpcWeb.ClientReadableStream<maelstrom_v1_server_pb.CancelResponse>;

  cancel(
    request: maelstrom_v1_server_pb.CancelRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.CancelResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/maelstrom.v1.Maelstrom/Cancel',
        request,
        metadata || {},
        this.methodDescriptorCancel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/maelstrom.v1.Maelstrom/Cancel',
    request,
    metadata || {},
    this.methodDescriptorCancel);
  }

  methodDescriptorWithdraw = new grpcWeb.MethodDescriptor(
    '/maelstrom.v1.Maelstrom/Withdraw',
    grpcWeb.MethodType.UNARY,
    maelstrom_v1_server_pb.WithdrawRequest,
    maelstrom_v1_server_pb.WithdrawResponse,
    (request: maelstrom_v1_server_pb.WithdrawRequest) => {
      return request.serializeBinary();
    },
    maelstrom_v1_server_pb.WithdrawResponse.deserializeBinary
  );

  withdraw(
    request: maelstrom_v1_server_pb.WithdrawRequest,
    metadata?: grpcWeb.Metadata | null): Promise<maelstrom_v1_server_pb.WithdrawResponse>;

  withdraw(
    request: maelstrom_v1_server_pb.WithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.WithdrawResponse) => void): grpcWeb.ClientReadableStream<maelstrom_v1_server_pb.WithdrawResponse>;

  withdraw(
    request: maelstrom_v1_server_pb.WithdrawRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.WithdrawResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/maelstrom.v1.Maelstrom/Withdraw',
        request,
        metadata || {},
        this.methodDescriptorWithdraw,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/maelstrom.v1.Maelstrom/Withdraw',
    request,
    metadata || {},
    this.methodDescriptorWithdraw);
  }

  methodDescriptorPendingWithdrawal = new grpcWeb.MethodDescriptor(
    '/maelstrom.v1.Maelstrom/PendingWithdrawal',
    grpcWeb.MethodType.UNARY,
    maelstrom_v1_server_pb.PendingWithdrawalRequest,
    maelstrom_v1_server_pb.PendingWithdrawalResponse,
    (request: maelstrom_v1_server_pb.PendingWithdrawalRequest) => {
      return request.serializeBinary();
    },
    maelstrom_v1_server_pb.PendingWithdrawalResponse.deserializeBinary
  );

  pendingWithdrawal(
    request: maelstrom_v1_server_pb.PendingWithdrawalRequest,
    metadata?: grpcWeb.Metadata | null): Promise<maelstrom_v1_server_pb.PendingWithdrawalResponse>;

  pendingWithdrawal(
    request: maelstrom_v1_server_pb.PendingWithdrawalRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.PendingWithdrawalResponse) => void): grpcWeb.ClientReadableStream<maelstrom_v1_server_pb.PendingWithdrawalResponse>;

  pendingWithdrawal(
    request: maelstrom_v1_server_pb.PendingWithdrawalRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.PendingWithdrawalResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/maelstrom.v1.Maelstrom/PendingWithdrawal',
        request,
        metadata || {},
        this.methodDescriptorPendingWithdrawal,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/maelstrom.v1.Maelstrom/PendingWithdrawal',
    request,
    metadata || {},
    this.methodDescriptorPendingWithdrawal);
  }

  methodDescriptorBroadcastTx = new grpcWeb.MethodDescriptor(
    '/maelstrom.v1.Maelstrom/BroadcastTx',
    grpcWeb.MethodType.UNARY,
    maelstrom_v1_server_pb.BroadcastTxRequest,
    maelstrom_v1_server_pb.BroadcastTxResponse,
    (request: maelstrom_v1_server_pb.BroadcastTxRequest) => {
      return request.serializeBinary();
    },
    maelstrom_v1_server_pb.BroadcastTxResponse.deserializeBinary
  );

  broadcastTx(
    request: maelstrom_v1_server_pb.BroadcastTxRequest,
    metadata?: grpcWeb.Metadata | null): Promise<maelstrom_v1_server_pb.BroadcastTxResponse>;

  broadcastTx(
    request: maelstrom_v1_server_pb.BroadcastTxRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.BroadcastTxResponse) => void): grpcWeb.ClientReadableStream<maelstrom_v1_server_pb.BroadcastTxResponse>;

  broadcastTx(
    request: maelstrom_v1_server_pb.BroadcastTxRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: maelstrom_v1_server_pb.BroadcastTxResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/maelstrom.v1.Maelstrom/BroadcastTx',
        request,
        metadata || {},
        this.methodDescriptorBroadcastTx,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/maelstrom.v1.Maelstrom/BroadcastTx',
    request,
    metadata || {},
    this.methodDescriptorBroadcastTx);
  }

}

